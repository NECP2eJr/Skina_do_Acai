/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fronteira;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tiago
 */
public class tblNovo extends javax.swing.JPanel {

    /**
     * Creates new form tblNovo
     */
    
    List<String> td_produtos = new ArrayList<>();
    List<String> td_sabores = new ArrayList<>();
    List<String> td_complementos = new ArrayList<>();
    List<String> td_tamanhos = new ArrayList<>();
    List<String> td_obs = new ArrayList<>();
    
    public tblNovo() {
        initComponents();
        
        enableComponents(false, false, false);
        //btnFinalizarPedido.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel();
        lblProduto = new javax.swing.JLabel();
        cbbProduto = new javax.swing.JComboBox<>();
        lblSabor = new javax.swing.JLabel();
        cbbSabor = new javax.swing.JComboBox<>();
        lblComplemento = new javax.swing.JLabel();
        cbbComplemento = new javax.swing.JComboBox<>();
        btnAdicionar = new javax.swing.JButton();
        lblTamanho = new javax.swing.JLabel();
        cbbTamanho = new javax.swing.JComboBox<>();
        pnlComplementos = new javax.swing.JPanel();
        scrlTableCplmt = new javax.swing.JScrollPane();
        tblTableCplmt = new javax.swing.JTable();
        btnRemover = new javax.swing.JButton();
        lblObs = new javax.swing.JLabel();
        scrpnObs = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        btnConfirmar = new javax.swing.JButton();
        btnAdicinarPedido = new javax.swing.JButton();
        lblValor = new javax.swing.JLabel();
        lblValorRS = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(800, 600));

        pnlBack.setBackground(new java.awt.Color(204, 204, 224));

        lblProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblProduto.setText("Produto:");

        cbbProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Açaí", "Vitamina" }));
        cbbProduto.setToolTipText("");
        cbbProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbProdutoItemStateChanged(evt);
            }
        });
        cbbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbProdutoActionPerformed(evt);
            }
        });

        lblSabor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSabor.setText("Sabor:");

        cbbSabor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbSabor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Vit.1: Açaí + Leite + Leite condensado", "Vit.2: Açaí + Leite + Leite condensado + Banana", "Vit.3: Açaí + Leite + Leite condensado + Morango", "Vit.4: Açaí + Leite + Leite condensado + Banana + Morango", "Vit.5: Açaí + Leite + Leite condensado + Morango + Paçoca", "Vit.6: Açaí + Leite + Leite condensado + Morango + Ovomaltine", "Vit.7: Açaí + Leite + Morango + Banana + Whey + Guaraná em pó" }));
        cbbSabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSaborActionPerformed(evt);
            }
        });

        lblComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblComplemento.setText("Complemento:");

        cbbComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbComplemento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Abacaxi", "Amendoim", "Banana", "Dadinho", "Morango", "Mousse de maracujá" }));
        cbbComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbComplementoActionPerformed(evt);
            }
        });

        btnAdicionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        lblTamanho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTamanho.setText("Tamanho:");

        cbbTamanho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbTamanho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "200 ml", "300 ml", "400 ml", "500 ml", "700 ml", "1 litro" }));
        cbbTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTamanhoActionPerformed(evt);
            }
        });

        pnlComplementos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Complementos adicionados: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tblTableCplmt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Complemento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTableCplmt.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrlTableCplmt.setViewportView(tblTableCplmt);

        javax.swing.GroupLayout pnlComplementosLayout = new javax.swing.GroupLayout(pnlComplementos);
        pnlComplementos.setLayout(pnlComplementosLayout);
        pnlComplementosLayout.setHorizontalGroup(
            pnlComplementosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlComplementosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrlTableCplmt, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlComplementosLayout.setVerticalGroup(
            pnlComplementosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrlTableCplmt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        btnRemover.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        lblObs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblObs.setText("Observações: ");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        scrpnObs.setViewportView(txtObs);

        btnConfirmar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnAdicinarPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdicinarPedido.setText("Adicionar Pedido");
        btnAdicinarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicinarPedidoActionPerformed(evt);
            }
        });

        lblValor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblValor.setText("Valor:");

        lblValorRS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblValorRS.setText("R$");

        javax.swing.GroupLayout pnlBackLayout = new javax.swing.GroupLayout(pnlBack);
        pnlBack.setLayout(pnlBackLayout);
        pnlBackLayout.setHorizontalGroup(
            pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBackLayout.createSequentialGroup()
                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlBackLayout.createSequentialGroup()
                                .addComponent(cbbComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAdicionar))
                            .addComponent(pnlComplementos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRemover))
                        .addGap(37, 37, 37)
                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblObs)
                            .addComponent(scrpnObs)))
                    .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlBackLayout.createSequentialGroup()
                            .addComponent(lblTamanho)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbbTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlBackLayout.createSequentialGroup()
                            .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblProduto)
                                .addComponent(lblSabor)
                                .addComponent(lblComplemento))
                            .addGap(32, 32, 32)
                            .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbbSabor, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlBackLayout.createSequentialGroup()
                        .addComponent(lblValor)
                        .addGap(18, 18, 18)
                        .addComponent(lblValorRS))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackLayout.createSequentialGroup()
                        .addComponent(btnAdicinarPedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        pnlBackLayout.setVerticalGroup(
            pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProduto)
                    .addComponent(cbbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSabor)
                    .addComponent(cbbSabor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComplemento)
                    .addComponent(cbbComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar)
                    .addComponent(lblTamanho)
                    .addComponent(cbbTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBackLayout.createSequentialGroup()
                        .addComponent(lblObs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrpnObs, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlComplementos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemover)
                .addGap(17, 17, 17)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValor)
                    .addComponent(lblValorRS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicinarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbProdutoActionPerformed
        int selected = cbbProduto.getSelectedIndex();
        if (selected == 0){
            enableComponents(false, false, false);
        }
        else if(selected == 1){
            enableComponents(true, false, true);
        }
        else if (selected == 2){
            enableComponents(false, true, true);
        }
    }//GEN-LAST:event_cbbProdutoActionPerformed

    
    private void cbbSaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSaborActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbSaborActionPerformed

    private void cbbComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbComplementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbComplementoActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // Adicionar complemento à lista
        String complemento = cbbComplemento.getSelectedItem().toString();
        
        DefaultTableModel model = (DefaultTableModel) tblTableCplmt.getModel();
        Vector row = new Vector();
        if(complemento != "Selecione:"){
            row.add(complemento);
            model.addRow(row);
        }
        
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void cbbTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTamanhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbTamanhoActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // Remover complemento da tabela
        DefaultTableModel model = (DefaultTableModel) tblTableCplmt.getModel();
        int row = tblTableCplmt.getSelectedRow();
        if(row != -1){
            model.removeRow(row);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        
        // Chamando tela de pagamentos enviando valores do formulário
        tblConfirmacao confirmacao = new tblConfirmacao(td_produtos, td_sabores, td_tamanhos, td_complementos, td_obs);
        confirmacao.setVisible(true);
        confirmacao.setDefaultCloseOperation(confirmacao.DISPOSE_ON_CLOSE);

        //limpando tela de novos pedidos
        resetComponents();
        enableComponents(false, false, false);

    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnAdicinarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicinarPedidoActionPerformed
        // Verificar se todos os campos estão preenchidos
        
        int produto = cbbProduto.getSelectedIndex();
        int tamanho = cbbTamanho.getSelectedIndex();
        int sabor = cbbSabor.getSelectedIndex();
        
        if(produto == 0){
            //nenhum produto selecionado, avisar
        }
        else if(produto == 1 && tamanho == 0){//açaí
            //nenhum tamanho selecionado, avisar
        }
        else if(produto == 2 && sabor == 0){//vitamina
                //nenhum sabor selecionado, avisar
        }
        else{
            // Ir para a próxima página
            
            // armazenar todos os  valores de todos os pedidos
            //Pegar valores selecionados
            String produto_nome = cbbProduto.getSelectedItem().toString();
            String sabor_nome = cbbSabor.getSelectedItem().toString();
            String tamanho_nome = cbbTamanho.getSelectedItem().toString();
            String observacoes = txtObs.getText().toString();
            
            List<String> complementos = new ArrayList<String>();
            if(produto == 1){
                for(int i=0; i<tblTableCplmt.getRowCount(); i++){
                    complementos.add(tblTableCplmt.getValueAt(i, 0).toString());
                }
            }
            else if (produto == 2){
                complementos.add("---");
            }
            
            complementos.add("---");
            
            td_produtos.add(produto_nome);
            if(sabor_nome == "Selecione:"){
                sabor_nome = "0";
            }
            td_sabores.add(sabor_nome);
            if(tamanho_nome == "Selecione:"){
                tamanho_nome = "0";
            }
            td_tamanhos.add(tamanho_nome);
            if(observacoes == ""){
                observacoes = "Sem observações";
            }
            td_obs.add(observacoes);
            
            td_complementos.addAll(complementos);
            
            resetComponents();
            enableComponents(false, false, false);
        }
        
        
        //Liberando botão de finalizar
        //btnFinalizarPedido.setEnabled(true);
        
    }//GEN-LAST:event_btnAdicinarPedidoActionPerformed

    private void cbbProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbProdutoItemStateChanged
        // TODO add your handling code here:
 
    }//GEN-LAST:event_cbbProdutoItemStateChanged

    private void enableComponents(boolean acai, boolean vit, boolean obs){
        // bloqueando componentes 
        cbbSabor.setEnabled(vit);
        cbbComplemento.setEnabled(acai); 
        cbbTamanho.setEnabled(acai);
        btnAdicionar.setEnabled(acai);
        tblTableCplmt.setEnabled(acai);
        btnRemover.setEnabled(acai);
        txtObs.setEnabled(obs);
        
        if (acai == true){
            cbbSabor.setSelectedIndex(0);
        }
        else if (vit == true){
            cbbComplemento.setSelectedIndex(0); 
            cbbTamanho.setSelectedIndex(0);
        }
        
        //Deletar lista de complementos
        if (acai == false){
            DefaultTableModel model = (DefaultTableModel) tblTableCplmt.getModel();
            int rowCount = model.getRowCount();
            for(int i = rowCount - 1; i>=0; i--){
                model.removeRow(i);
            }
        }
        
    }
    
    private void resetComponents(){
        cbbProduto.setSelectedIndex(0);
        cbbSabor.setSelectedIndex(0);
        cbbComplemento.setSelectedIndex(0); 
        cbbTamanho.setSelectedIndex(0);
        txtObs.setText("");
        
        DefaultTableModel model = (DefaultTableModel) tblTableCplmt.getModel();
        int row = tblTableCplmt.getSelectedRow();
        if(row != -1){
            model.removeRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicinarPedido;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JComboBox<String> cbbComplemento;
    private javax.swing.JComboBox<String> cbbProduto;
    private javax.swing.JComboBox<String> cbbSabor;
    private javax.swing.JComboBox<String> cbbTamanho;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblObs;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblSabor;
    private javax.swing.JLabel lblTamanho;
    private javax.swing.JLabel lblValor;
    private javax.swing.JLabel lblValorRS;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JPanel pnlComplementos;
    private javax.swing.JScrollPane scrlTableCplmt;
    private javax.swing.JScrollPane scrpnObs;
    private javax.swing.JTable tblTableCplmt;
    private javax.swing.JTextArea txtObs;
    // End of variables declaration//GEN-END:variables

}
