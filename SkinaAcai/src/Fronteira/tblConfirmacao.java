/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Fronteira;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tiago
 */
public class tblConfirmacao extends javax.swing.JFrame {

    /** Creates new form tblConfirmacao */
    
    List<String> prod = new ArrayList();
    List<String> sab = new ArrayList();
    List<String> tam = new ArrayList();
    List<String> comp = new ArrayList();
    List<String> obs = new ArrayList();
    
    
    public tblConfirmacao() {
        initComponents();
    }

    public tblConfirmacao(List<String> produto_nome, List<String> sabor_nome, List<String> tamanho_nome, List<String> complementos, List<String> observacoes) {
        initComponents();
        
        prod = produto_nome;
        sab = sabor_nome;
        tam = tamanho_nome;
        comp = complementos;
        obs = observacoes;
        
        //desabilitar componentes ao iniciar
        enableComponents();
        
        //listar todos os produtos adicionados
        setProducts(produto_nome,sabor_nome,tamanho_nome,complementos,observacoes);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel();
        lblPagamento = new javax.swing.JLabel();
        btnRemover = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        lblComplemento = new javax.swing.JLabel();
        cbbComplemento = new javax.swing.JComboBox<>();
        btnAdicionar = new javax.swing.JButton();
        btnRemoverComplemento = new javax.swing.JButton();
        lblTamanho = new javax.swing.JLabel();
        cbbTamanho = new javax.swing.JComboBox<>();
        lblSabor = new javax.swing.JLabel();
        cbbSabor = new javax.swing.JComboBox<>();
        lblObs = new javax.swing.JLabel();
        scrpnObs = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        btnVoltar = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        scrlTablePedidos = new javax.swing.JScrollPane();
        tblTableProdutos = new javax.swing.JTable();
        scrlTableComplementos = new javax.swing.JScrollPane();
        tblTableComplementos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Confirmação dos pedidos");
        setMaximumSize(new java.awt.Dimension(680, 550));
        setMinimumSize(new java.awt.Dimension(680, 550));
        setResizable(false);

        pnlBack.setBackground(new java.awt.Color(204, 204, 224));
        pnlBack.setEnabled(false);

        lblPagamento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPagamento.setText("Confirmação:");

        btnRemover.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        lblComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblComplemento.setText("Complemento:");

        cbbComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbComplemento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Abacaxi", "Amendoim", "Banana", "Dadinho", "Morango", "Mousse de maracujá" }));
        cbbComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbComplementoActionPerformed(evt);
            }
        });

        btnAdicionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemoverComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemoverComplemento.setText("Remover");
        btnRemoverComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverComplementoActionPerformed(evt);
            }
        });

        lblTamanho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTamanho.setText("Tamanho:");

        cbbTamanho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbTamanho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "200 ml", "300 ml", "400 ml", "500 ml", "700 ml", "1 litro" }));
        cbbTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTamanhoActionPerformed(evt);
            }
        });

        lblSabor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSabor.setText("Sabor:");

        cbbSabor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbSabor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Vit.1: Açaí + Leite + Leite condensado", "Vit.2: Açaí + Leite + Leite condensado + Banana", "Vit.3: Açaí + Leite + Leite condensado + Morango", "Vit.4: Açaí + Leite + Leite condensado + Banana + Morango", "Vit.5: Açaí + Leite + Leite condensado + Morango + Paçoca", "Vit.6: Açaí + Leite + Leite condensado + Morango + Ovomaltine", "Vit.7: Açaí + Leite + Morango + Banana + Whey + Guaraná em pó" }));
        cbbSabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSaborActionPerformed(evt);
            }
        });

        lblObs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblObs.setText("Observações: ");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        scrpnObs.setViewportView(txtObs);

        btnVoltar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnFinalizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalvar.setText("Salvar alterações");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        tblTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Sabor/complemento", "Tamanho", "Observações", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTableProdutos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTableProdutosMouseClicked(evt);
            }
        });
        scrlTablePedidos.setViewportView(tblTableProdutos);
        if (tblTableProdutos.getColumnModel().getColumnCount() > 0) {
            tblTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(300);
        }

        tblTableComplementos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Complemento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTableComplementos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrlTableComplementos.setViewportView(tblTableComplementos);
        if (tblTableComplementos.getColumnModel().getColumnCount() > 0) {
            tblTableComplementos.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout pnlBackLayout = new javax.swing.GroupLayout(pnlBack);
        pnlBack.setLayout(pnlBackLayout);
        pnlBackLayout.setHorizontalGroup(
            pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(scrlTablePedidos, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlBackLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnlBackLayout.createSequentialGroup()
                                    .addComponent(btnVoltar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnFinalizar))
                                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackLayout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(btnEditar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnRemover))
                                    .addGroup(pnlBackLayout.createSequentialGroup()
                                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlBackLayout.createSequentialGroup()
                                                .addGap(340, 340, 340)
                                                .addComponent(btnRemoverComplemento))
                                            .addComponent(lblComplemento)
                                            .addGroup(pnlBackLayout.createSequentialGroup()
                                                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblTamanho)
                                                    .addComponent(lblSabor))
                                                .addGap(116, 116, 116)
                                                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(cbbSabor, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cbbComplemento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cbbTamanho, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnAdicionar))
                                            .addComponent(scrlTableComplementos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackLayout.createSequentialGroup()
                                                .addGap(49, 49, 49)
                                                .addComponent(btnSalvar))
                                            .addGroup(pnlBackLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblObs)
                                                    .addComponent(scrpnObs, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                    .addComponent(lblPagamento))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        pnlBackLayout.setVerticalGroup(
            pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblPagamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrlTablePedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemover)
                    .addComponent(btnEditar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBackLayout.createSequentialGroup()
                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSabor)
                            .addComponent(cbbSabor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTamanho)
                            .addComponent(cbbTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblComplemento)
                            .addComponent(cbbComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(scrlTableComplementos, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBackLayout.createSequentialGroup()
                        .addComponent(lblObs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrpnObs, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoverComplemento)
                    .addComponent(btnSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(btnFinalizar))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbbComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbComplementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbComplementoActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // Adicionar complemento à lista
        String complemento = cbbComplemento.getSelectedItem().toString();
        
        DefaultTableModel model = (DefaultTableModel) tblTableComplementos.getModel();
        Vector row = new Vector();
        if(complemento != "Selecione:"){
            row.add(complemento);
            model.addRow(row);
        }

    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverComplementoActionPerformed
        // Remover complemento da tabela
        
        DefaultTableModel model = (DefaultTableModel) tblTableComplementos.getModel();
        int row = tblTableComplementos.getSelectedRow();
        if(row != -1){
            model.removeRow(row);
        }
        
    }//GEN-LAST:event_btnRemoverComplementoActionPerformed

    private void cbbTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTamanhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbTamanhoActionPerformed

    private void cbbSaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSaborActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbSaborActionPerformed

    private void tblTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTableProdutosMouseClicked
        // Liberar botão de alterar/remover
        btnEditar.setEnabled(true);
        btnRemover.setEnabled(true);
    }//GEN-LAST:event_tblTableProdutosMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // setar valores já selecionados
 
        //Variáveis para armazenar valores atuais das listas
        String produto_atual, sabor_atual, tamanho_atual, observacao_atual;
        List<String> complemento_atual;
        
        
        //pegando valores
        produto_atual = tblTableProdutos.getValueAt(tblTableProdutos.getSelectedRow(),0).toString();
        
        observacao_atual = tblTableProdutos.getValueAt(tblTableProdutos.getSelectedRow(),3).toString();
        txtObs.setText(observacao_atual);
        
        if(produto_atual == "Açaí"){
            //habilitando componentes
            enableComponents(true, false);
            
            //setando tamanho
            tamanho_atual = tblTableProdutos.getValueAt(tblTableProdutos.getSelectedRow(),2).toString();
            cbbTamanho.setSelectedItem(tamanho_atual);
            
            //pegando complementos da tabela produtos
            complemento_atual = (List<String>) tblTableProdutos.getValueAt(tblTableProdutos.getSelectedRow(),1);
            DefaultTableModel model = (DefaultTableModel) tblTableComplementos.getModel();
            
            //limpando tabela de complementos
            int rowCount = model.getRowCount();
            for(int i = rowCount - 1; i>=0; i--){
                model.removeRow(i);
            }
            
            //Setando tabela de complementos
            for(int i=0; i<complemento_atual.size(); i++){
                Vector row = new Vector();
                row.add(complemento_atual.get(i));
                model.addRow(row);
            }
            
        }
        else{
            sabor_atual = tblTableProdutos.getValueAt(tblTableProdutos.getSelectedRow(),1).toString();
            enableComponents(false, true);
            cbbSabor.setSelectedItem(sabor_atual);
        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        //Removendo produto visualmente
        DefaultTableModel model = (DefaultTableModel) tblTableProdutos.getModel();
        int row = tblTableProdutos.getSelectedRow();
        if(row != -1){
            System.out.println(row);
            model.removeRow(row);
        }
        
        //Quando sai e volta na página o pedido volta, arrumar pelo BD
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        //Depende do crud para alterar na parte visual
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        this.dispose();
        tblPagamentos pagamento = new tblPagamentos(prod,sab,tam,comp,obs);
        
        pagamento.setVisible(true);
    }//GEN-LAST:event_btnFinalizarActionPerformed

    //desabilitar componentes ao iniciar
    private void enableComponents(){
        cbbComplemento.setEnabled(false);
        cbbSabor.setEnabled(false);
        cbbTamanho.setEnabled(false);
        btnAdicionar.setEnabled(false);
        btnRemoverComplemento.setEnabled(false);
        txtObs.setEnabled(false);
        btnSalvar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnRemover.setEnabled(false);
    }
    
    private void enableComponents(boolean acai, boolean vit){
        // bloqueando componentes 
        cbbSabor.setEnabled(vit);
        cbbComplemento.setEnabled(acai); 
        cbbTamanho.setEnabled(acai);
        btnAdicionar.setEnabled(acai);
        tblTableComplementos.setEnabled(acai);
        btnRemoverComplemento.setEnabled(acai);
        txtObs.setEnabled(true);
        
        if (acai == true){
            cbbSabor.setSelectedIndex(0);
        }
        else if (vit == true){
            cbbComplemento.setSelectedIndex(0); 
            cbbTamanho.setSelectedIndex(0);
        }
        
        //Deletar lista de complementos
        if (acai == false){
            DefaultTableModel model = (DefaultTableModel) tblTableComplementos.getModel();
            int rowCount = model.getRowCount();
            for(int i = rowCount - 1; i>=0; i--){
                model.removeRow(i);
            }
        }
        
    }
    
    //listar todos os produtos adicionados
    private void setProducts(List<String> produto, List<String> sabor, List<String> tamanho, List<String> complementos, List<String> observacoes){
        
        int qtd_produtos = produto.size(); //armazenando quantidade de produtos
        int cplmt = 0; //Variável para percorrer a quantidade de complementos, enquanto complemento for diferente de "---"
        
        //Tabela vazia
        DefaultTableModel model = (DefaultTableModel) tblTableProdutos.getModel();
        
        //Variáveis para armazenar valores atuais das listas
        String produto_atual, sabor_atual, tamanho_atual, observacao_atual, aux_complemento_atual;
        
        
        //Variavel do valor - pegar do BD
        String valor_atual = "10";
        
        //percorrendo todos produtos
        for(int i=0; i<qtd_produtos; i++){
            produto_atual = produto.get(i);
            sabor_atual = sabor.get(i);
            tamanho_atual = tamanho.get(i);
            observacao_atual = observacoes.get(i);
            
            List<String> complemento_atual = new ArrayList<String>(); //complementos atuais
            
            //Verificar se é açaí ou vitamina
            if(produto_atual == "Vitamina"){
                model.addRow(new Object[]{produto_atual, sabor_atual, tamanho_atual, observacao_atual, valor_atual});
                cplmt ++;
            }
            else{
                aux_complemento_atual = complementos.get(cplmt);
                while(aux_complemento_atual != "---"){
                    complemento_atual.add(aux_complemento_atual);
                    cplmt ++;
                    aux_complemento_atual = complementos.get(cplmt);
                }
                model.addRow(new Object[]{produto_atual, complemento_atual, tamanho_atual, observacao_atual, valor_atual});
            }
            
            cplmt ++;
            
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tblConfirmacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tblConfirmacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tblConfirmacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tblConfirmacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tblConfirmacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnRemoverComplemento;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cbbComplemento;
    private javax.swing.JComboBox<String> cbbSabor;
    private javax.swing.JComboBox<String> cbbTamanho;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblObs;
    private javax.swing.JLabel lblPagamento;
    private javax.swing.JLabel lblSabor;
    private javax.swing.JLabel lblTamanho;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JScrollPane scrlTableComplementos;
    private javax.swing.JScrollPane scrlTablePedidos;
    private javax.swing.JScrollPane scrpnObs;
    private javax.swing.JTable tblTableComplementos;
    private javax.swing.JTable tblTableProdutos;
    private javax.swing.JTextArea txtObs;
    // End of variables declaration//GEN-END:variables

}
