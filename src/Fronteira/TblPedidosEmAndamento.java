package Fronteira;

import Controle.ClsRelacional;
import Persistencia.PerRelacional;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.awt.Graphics;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.TimeZone;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class TblPedidosEmAndamento extends javax.swing.JPanel {

    int id;
    String nome;
    String estado;

    Date hoje = new Date();
    SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");

    public TblPedidosEmAndamento() {
        initComponents();

        df.setTimeZone(TimeZone.getTimeZone("GMT-3"));

        PreencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                ImageIcon im = new ImageIcon ("src\\Imagens\\back6.jpg");
                Image i = im.getImage();

                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height, this);
            }
        };
        scrlTable = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        lblPedidos = new javax.swing.JLabel();
        btnVisualizar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        bttSalvar = new javax.swing.JButton();
        rdbtnEspera = new javax.swing.JRadioButton();
        rdbtnCozinha = new javax.swing.JRadioButton();
        rdbtnMotoboy = new javax.swing.JRadioButton();
        rdbtnFinalizado = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(800, 600));

        pnlBack.setBackground(new java.awt.Color(204, 204, 224));

        tblTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodPedido", "Nome", "Pedido", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTable.setMinimumSize(new java.awt.Dimension(100, 80));
        tblTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblTableMouseReleased(evt);
            }
        });
        scrlTable.setViewportView(tblTable);
        if (tblTable.getColumnModel().getColumnCount() > 0) {
            tblTable.getColumnModel().getColumn(0).setResizable(false);
            tblTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            tblTable.getColumnModel().getColumn(2).setMinWidth(300);
            tblTable.getColumnModel().getColumn(3).setResizable(false);
            tblTable.getColumnModel().getColumn(3).setPreferredWidth(15);
        }

        lblPedidos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPedidos.setText("Pedidos em Andamento:");

        btnVisualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnVisualizar.setText("Visualizar");
        btnVisualizar.setEnabled(false);
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        bttSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bttSalvar.setText("Salvar alterações");
        bttSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttSalvarActionPerformed(evt);
            }
        });

        rdbtnEspera.setBackground(new java.awt.Color(204, 204, 224));
        rdbtnEspera.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdbtnEspera.setText("Em espera");
        rdbtnEspera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnEsperaActionPerformed(evt);
            }
        });

        rdbtnCozinha.setBackground(new java.awt.Color(204, 204, 224));
        rdbtnCozinha.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdbtnCozinha.setText("Cozinha");
        rdbtnCozinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnCozinhaActionPerformed(evt);
            }
        });

        rdbtnMotoboy.setBackground(new java.awt.Color(204, 204, 224));
        rdbtnMotoboy.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdbtnMotoboy.setText("Motoboy");
        rdbtnMotoboy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnMotoboyActionPerformed(evt);
            }
        });

        rdbtnFinalizado.setBackground(new java.awt.Color(204, 204, 224));
        rdbtnFinalizado.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdbtnFinalizado.setText("Finalizado");
        rdbtnFinalizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnFinalizadoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Estado:");

        javax.swing.GroupLayout pnlBackLayout = new javax.swing.GroupLayout(pnlBack);
        pnlBack.setLayout(pnlBackLayout);
        pnlBackLayout.setHorizontalGroup(
            pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPedidos)
                    .addComponent(scrlTable, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBackLayout.createSequentialGroup()
                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlBackLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackLayout.createSequentialGroup()
                                .addComponent(rdbtnEspera)
                                .addGap(18, 18, 18)
                                .addComponent(rdbtnCozinha)
                                .addGap(18, 18, 18)
                                .addComponent(rdbtnMotoboy)
                                .addGap(18, 18, 18)
                                .addComponent(rdbtnFinalizado)))
                        .addGap(180, 180, 180)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnVisualizar))
                    .addComponent(bttSalvar))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        pnlBackLayout.setVerticalGroup(
            pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lblPedidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrlTable, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnVisualizar)
                        .addComponent(btnAlterar))
                    .addGroup(pnlBackLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdbtnEspera)
                            .addComponent(rdbtnCozinha)
                            .addComponent(rdbtnMotoboy)
                            .addComponent(rdbtnFinalizado))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bttSalvar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
        tblInfo info = new tblInfo();

        //enviar as informações do pedido completas aqui
        info.setVisible(true);
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed

        //DefaultTableModel model1 = (DefaultTableModel) tblTable.getModel();
        int row1 = tblTable.getSelectedRow();

        if (row1 != -1) {
            id = Integer.parseInt(tblTable.getValueAt(tblTable.getSelectedRow(), 0) + "");

            estado = tblTable.getValueAt(tblTable.getSelectedRow(), 3).toString();

            if (estado.equals("Em espera")) {
                setRadioButton(true, false, false, false);
            } else if (estado.equals("Cozinha")) {
                setRadioButton(false, true, false, false);
            } else if (estado.equals("Motoboy")) {
                setRadioButton(false, false, true, false);
            } else if (estado.equals("Finalizado")) {
                setRadioButton(false, false, false, true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um pedido para alterar");
        }

    }//GEN-LAST:event_btnAlterarActionPerformed

    private void bttSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttSalvarActionPerformed
        //enviar todas as informações atualizadas para o banco

        if (rdbtnEspera.isSelected() == true || rdbtnCozinha.isSelected() == true || rdbtnMotoboy.isSelected() == true || rdbtnFinalizado.isSelected() == true) {
            if (rdbtnEspera.isSelected() == true) {

                estado = "Em espera";

                PerRelacional.AlterarEstado(estado, id);

                setRadioButton(false, false, false, false);

                PreencherTabela();
            }

            if (rdbtnCozinha.isSelected() == true) {

                estado = "Cozinha";
                PerRelacional.AlterarEstado(estado, id);

                setRadioButton(false, false, false, false);

                PreencherTabela();
            }

            if (rdbtnMotoboy.isSelected() == true) {

                estado = "Motoboy";
                PerRelacional.AlterarEstado(estado, id);

                setRadioButton(false, false, false, false);

                PreencherTabela();
            }

            if (rdbtnFinalizado.isSelected() == true) {

                estado = "Finalizado";
                PerRelacional.AlterarEstado(estado, id);

                setRadioButton(false, false, false, false);

                PreencherTabela();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum pedido selecionado");
        }
    }//GEN-LAST:event_bttSalvarActionPerformed

    private void rdbtnFinalizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnFinalizadoActionPerformed
        setRadioButton(false, false, false, true);
    }//GEN-LAST:event_rdbtnFinalizadoActionPerformed

    private void rdbtnMotoboyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnMotoboyActionPerformed
        setRadioButton(false, false, true, false);
    }//GEN-LAST:event_rdbtnMotoboyActionPerformed

    private void rdbtnCozinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnCozinhaActionPerformed
        setRadioButton(false, true, false, false);
    }//GEN-LAST:event_rdbtnCozinhaActionPerformed

    private void rdbtnEsperaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnEsperaActionPerformed
        setRadioButton(true, false, false, false);
    }//GEN-LAST:event_rdbtnEsperaActionPerformed

    private void tblTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTableMouseReleased
        setRadioButton(false, false, false, false);
    }//GEN-LAST:event_tblTableMouseReleased

    private void setRadioButton(boolean cozinha, boolean andamento, boolean motoboy, boolean entregue) {
        rdbtnEspera.setSelected(cozinha);
        rdbtnCozinha.setSelected(andamento);
        rdbtnMotoboy.setSelected(motoboy);
        rdbtnFinalizado.setSelected(entregue);
    }

    private void PreencherTabela() {

        DefaultTableModel model = (DefaultTableModel) tblTable.getModel();

        //vai limpar a tabela
        int t = model.getRowCount();
        for (int i = 0; i < t; i++) {
            model.removeRow(0);
        }

        PerRelacional perRelacional = new PerRelacional();
        ArrayList<ClsRelacional> relacional = PerRelacional.ConsultarPedidosAndamento(df.format(new Date()));
        HashMap<Integer, Integer> acaiCount = new HashMap<>();
        HashMap<Integer, Integer> vitCount = new HashMap<>();
        HashMap<Integer, String[]> infoRow = new HashMap<>();

        for (ClsRelacional q : relacional) {
            int code = q.getCodPedido();
            int Acont;
            int Vcont;

            if (acaiCount.get(code) == null) {
                acaiCount.put(code, 0);
                Acont = 0;
            } else {
                Acont = acaiCount.get(code);
            }
            if (vitCount.get(code) == null) {
                vitCount.put(code, 0);
                Vcont = 0;
            } else {
                Vcont = vitCount.get(code);
            }
            if (q.getIdProduto() == 1) {
                acaiCount.put(code, Acont + 1);
            } else {
                vitCount.put(code, Vcont + 1);
            }
            String[] info = new String[2];
            info[0] = q.getNomeCliente();
            info[1] = q.getStatusPedido();
            infoRow.put(code, info);
        }

        for (int i : infoRow.keySet()) {
            String linha[] = new String[4];
            linha[0] = i + "";
            linha[1] = infoRow.get(i)[0];
            linha[3] = infoRow.get(i)[1];
            String pedido = "";
            int quantA = acaiCount.get(i), quantV = vitCount.get(i);
            if (quantA > 0 && quantV > 0) {
                linha[2] = quantA + " açaí(s) e " + quantV + " vitamina(s)";
            } else if (quantA > 0) {
                linha[2] = quantA + " açaí(s)";
            } else {
                linha[2] = quantV + " vitamina(s)";
            }
            model.addRow(linha);
        }

        setRadioButton(false, false, false, false);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnVisualizar;
    private javax.swing.JButton bttSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblPedidos;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JRadioButton rdbtnCozinha;
    private javax.swing.JRadioButton rdbtnEspera;
    private javax.swing.JRadioButton rdbtnFinalizado;
    private javax.swing.JRadioButton rdbtnMotoboy;
    private javax.swing.JScrollPane scrlTable;
    private javax.swing.JTable tblTable;
    // End of variables declaration//GEN-END:variables
}
