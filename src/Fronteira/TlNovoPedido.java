package Fronteira;

import Controle.ClsAcai;
import Controle.ClsComplemento;
import Controle.ClsVitamina;
import Persistencia.PerAcai;
import Persistencia.PerComplemento;
import Persistencia.PerVitamina;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;

public class TlNovoPedido extends javax.swing.JPanel {

    double Vtotal = 0, Vsabor = 0, Vcomplemento = 0, Vtamanho = 0;
    int qntdpedido = 0;
    int estadoliberar = 0;
    InicioMDI inicio;

    DefaultTableModel vTabela = new DefaultTableModel();

    List<String> td_produtos = new ArrayList<>();
    List<String> td_sabores = new ArrayList<>();
    List<String> td_complementos = new ArrayList<>();
    List<String> td_tamanhos = new ArrayList<>();
    List<String> td_obs = new ArrayList<>();
    List<String> td_valor = new ArrayList<>();

    public TlNovoPedido(InicioMDI inicio1) {
        initComponents();

        inicio = inicio1;
        enableComponents(false, false, false);

        preencherSabor();
        preencherTamanho();
        preencherComplemento();

        vTabela.addColumn("Nome");

        total.setText(Vtotal + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                ImageIcon im = new ImageIcon ("src\\Imagens\\back6.jpg");
                Image i = im.getImage();

                g.drawImage(i, 0, 0, this.getSize().width, this.getSize().height, this);
            }
        };
        lblProduto = new javax.swing.JLabel();
        cbbProduto = new javax.swing.JComboBox<>();
        lblSabor = new javax.swing.JLabel();
        cbbSabor = new javax.swing.JComboBox<>();
        lblComplemento = new javax.swing.JLabel();
        cbbComplemento = new javax.swing.JComboBox<>();
        btnAdicionar = new javax.swing.JButton();
        lblTamanho = new javax.swing.JLabel();
        cbbTamanho = new javax.swing.JComboBox<>();
        pnlComplementos = new javax.swing.JPanel();
        scrlTableCplmt = new javax.swing.JScrollPane();
        tblTableCplmt = new javax.swing.JTable();
        btnRemover = new javax.swing.JButton();
        lblObs = new javax.swing.JLabel();
        scrpnObs = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        btnConfirmar = new javax.swing.JButton();
        btnAdicinarPedido = new javax.swing.JButton();
        lblValor = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        bttTotal = new javax.swing.JButton();
        lblPagamento = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(800, 600));

        pnlBack.setBackground(new java.awt.Color(204, 204, 224));

        lblProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblProduto.setText("Produto:");

        cbbProduto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:", "Açaí", "Vitamina" }));
        cbbProduto.setToolTipText("");
        cbbProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbProdutoActionPerformed(evt);
            }
        });

        lblSabor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSabor.setText("Sabor:");

        cbbSabor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbSabor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:" }));
        cbbSabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbSaborActionPerformed(evt);
            }
        });

        lblComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblComplemento.setText("Complemento:");

        cbbComplemento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnAdicionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        lblTamanho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTamanho.setText("Tamanho:");

        cbbTamanho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbTamanho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione:" }));
        cbbTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTamanhoActionPerformed(evt);
            }
        });

        pnlComplementos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Complementos adicionados: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        tblTableCplmt.setModel(vTabela);
        tblTableCplmt.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrlTableCplmt.setViewportView(tblTableCplmt);

        javax.swing.GroupLayout pnlComplementosLayout = new javax.swing.GroupLayout(pnlComplementos);
        pnlComplementos.setLayout(pnlComplementosLayout);
        pnlComplementosLayout.setHorizontalGroup(
            pnlComplementosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlComplementosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrlTableCplmt, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlComplementosLayout.setVerticalGroup(
            pnlComplementosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrlTableCplmt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        btnRemover.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        lblObs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblObs.setText("Observações: ");

        txtObs.setColumns(20);
        txtObs.setLineWrap(true);
        txtObs.setRows(5);
        scrpnObs.setViewportView(txtObs);

        btnConfirmar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnAdicinarPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdicinarPedido.setText("Adicionar Pedido");
        btnAdicinarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicinarPedidoActionPerformed(evt);
            }
        });

        lblValor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblValor.setText("Total: R$");

        bttTotal.setText("Mostrar total");
        bttTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttTotalActionPerformed(evt);
            }
        });

        lblPagamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPagamento.setText("Novo Pedido:");

        javax.swing.GroupLayout pnlBackLayout = new javax.swing.GroupLayout(pnlBack);
        pnlBack.setLayout(pnlBackLayout);
        pnlBackLayout.setHorizontalGroup(
            pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bttTotal)
                    .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnlBackLayout.createSequentialGroup()
                            .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnlBackLayout.createSequentialGroup()
                                    .addGap(123, 123, 123)
                                    .addComponent(cbbComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAdicionar))
                                .addComponent(pnlComplementos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnRemover))
                            .addGap(37, 37, 37)
                            .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblObs)
                                .addComponent(scrpnObs)))
                        .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlBackLayout.createSequentialGroup()
                                .addComponent(lblTamanho)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbbTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlBackLayout.createSequentialGroup()
                                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProduto)
                                    .addComponent(lblSabor)
                                    .addComponent(lblComplemento)
                                    .addComponent(lblPagamento))
                                .addGap(621, 621, 621)))
                        .addGroup(pnlBackLayout.createSequentialGroup()
                            .addComponent(lblValor)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(total))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackLayout.createSequentialGroup()
                            .addComponent(btnAdicinarPedido)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlBackLayout.createSequentialGroup()
                            .addGap(123, 123, 123)
                            .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbbSabor, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        pnlBackLayout.setVerticalGroup(
            pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblPagamento)
                .addGap(18, 18, 18)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProduto)
                    .addComponent(cbbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSabor)
                    .addComponent(cbbSabor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComplemento)
                    .addComponent(cbbComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar)
                    .addComponent(lblTamanho)
                    .addComponent(cbbTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlBackLayout.createSequentialGroup()
                        .addComponent(lblObs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrpnObs, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlComplementos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemover)
                .addGap(17, 17, 17)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValor)
                    .addComponent(total))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bttTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlBackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicinarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbbProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbProdutoActionPerformed
        int selected = cbbProduto.getSelectedIndex();

        switch (selected) {
            case 0:
                Vcomplemento = 0;
                Vsabor = 0;
                Vtamanho = 0;
                Vtotal = 0;
                total.setText(Vtotal + "");

                enableComponents(false, false, false);
                break;
            case 1:
                Vcomplemento = 0;
                Vsabor = 0;
                Vtamanho = 0;
                Vtotal = 0;
                total.setText(Vtotal + "");
                enableComponents(false, true, true);
                enableComponents(true, false, true);
                break;
            case 2:
                Vcomplemento = 0;
                Vsabor = 0;
                Vtamanho = 0;
                Vtotal = 0;
                total.setText(Vtotal + "");
                enableComponents(true, false, true);
                enableComponents(false, true, true);
                break;
            default:
                break;
        }

    }//GEN-LAST:event_cbbProdutoActionPerformed


    private void cbbSaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbSaborActionPerformed

        String sabor = cbbSabor.getSelectedItem() + "";

        if (!"Selecione:".equals(sabor)) {
            PerVitamina perVit = new PerVitamina();
            ArrayList<ClsVitamina> vitamina = new PerVitamina().TodasVitaminas();
            for (ClsVitamina p : vitamina) {
                if (sabor.equals(p.getTipo() + ": " + p.getNome())) {
                    Vsabor = p.getPreco();

                }
            }
        }

    }//GEN-LAST:event_cbbSaborActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed

        String complemento = cbbComplemento.getSelectedItem().toString();

        Vector row = new Vector();
        row.add(complemento);
        vTabela.addRow(row);

    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void cbbTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTamanhoActionPerformed

        String acai = cbbTamanho.getSelectedItem() + "";

        if (!"Selecione:".equals(acai)) {
            PerAcai perAcai = new PerAcai();
            ArrayList<ClsAcai> acai2 = new PerAcai().TodosAcai();
            for (ClsAcai p : acai2) {
                if (acai.equals(p.getTamanho())) {
                    Vtamanho = p.getPreco();
                }
            }
        }

    }//GEN-LAST:event_cbbTamanhoActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // Remover complemento da tabela
        DefaultTableModel model = (DefaultTableModel) tblTableCplmt.getModel();
        int row = tblTableCplmt.getSelectedRow();
        if (row != -1) {
            model.removeRow(row);
        } else {
            infoBox("Selecione uma coluna", "Erro ao remover");
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed

        if (qntdpedido == 0) {
            JOptionPane.showMessageDialog(null, "Para avançar, porfavor, monte o pedido");

        } else {
            // Chamando tela de pagamentos enviando valores do formulário
            tblConfirmacao confirmacao = new tblConfirmacao(td_produtos, td_sabores, td_tamanhos, td_complementos, td_obs, td_valor, inicio);
            confirmacao.setVisible(true);
            confirmacao.setDefaultCloseOperation(confirmacao.DISPOSE_ON_CLOSE);

            //limpando tela de novos pedidos
            resetComponents();
            enableComponents(false, false, false);

        }

    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnAdicinarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicinarPedidoActionPerformed
        // Verificar se todos os campos estão preenchidos

        int produto = cbbProduto.getSelectedIndex();
        int tamanho = cbbTamanho.getSelectedIndex();
        int sabor = cbbSabor.getSelectedIndex();

        if (produto == 0) {
            infoBox("Nenhum produto selecionado", "Erro");
        } else if (produto == 1 && tamanho == 0) {//açaí
            infoBox("Nenhum tamanho selecionado", "Erro");
        } else if (produto == 2 && sabor == 0) {//vitamina
            infoBox("Nenhum sabor selecionado", "Erro");
        } else {
            // Ir para a próxima página

            // armazenar todos os  valores de todos os pedidos
            //Pegar valores selecionados
            ///////////////////////
            int qntdrow = tblTableCplmt.getRowCount();

            if (qntdrow != -1) {
                for (int i = 0; i < qntdrow; i++) {

                    String complemento = tblTableCplmt.getValueAt(i, 0).toString();

                    if (!"Selecione:".equals(complemento)) {
                        PerComplemento perComp = new PerComplemento();
                        ArrayList<ClsComplemento> comp = new PerComplemento().TodosComplemento();
                        for (ClsComplemento p : comp) {
                            if (complemento.equals(p.getNome())) {
                                Vcomplemento += p.getPreco();
                            }
                        }
                    }
                }
            } else {
                Vcomplemento = 0;
            }

            Vtotal = Vsabor + Vcomplemento + Vtamanho;

            //////////////////////////
            String produto_nome = cbbProduto.getSelectedItem().toString();
            String sabor_nome = cbbSabor.getSelectedItem().toString();
            String tamanho_nome = cbbTamanho.getSelectedItem().toString();
            String observacoes = txtObs.getText().toString();
            String valor = Vtotal + "";

            List<String> complementos = new ArrayList<String>();
            for (int i = 0; i < tblTableCplmt.getRowCount(); i++) {
                complementos.add(tblTableCplmt.getValueAt(i, 0).toString());
            }

            complementos.add("---");

            td_produtos.add(produto_nome);

            if (sabor_nome == "Selecione:") {
                sabor_nome = "0";
            }
            td_sabores.add(sabor_nome);
            if (tamanho_nome == "Selecione:") {
                tamanho_nome = "0";
            }
            td_tamanhos.add(tamanho_nome);
            if (observacoes == "") {
                observacoes = "";
            }
            td_obs.add(observacoes);
            td_valor.add(valor);

            td_complementos.addAll(complementos);

            resetComponents();
            enableComponents(false, false, false);
            infoBox("Pedido adicionado com sucesso", "Adicionado");

        }

        qntdpedido++;

        //Liberando botão de finalizar
        btnConfirmar.setEnabled(true);

    }//GEN-LAST:event_btnAdicinarPedidoActionPerformed

    private void bttTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttTotalActionPerformed

        int qntdrow = tblTableCplmt.getRowCount();

        if (qntdrow != -1) {
            for (int i = 0; i < qntdrow; i++) {

                String complemento = tblTableCplmt.getValueAt(i, 0).toString();

                if (!"Selecione:".equals(complemento)) {
                    PerComplemento perComp = new PerComplemento();
                    ArrayList<ClsComplemento> comp = new PerComplemento().TodosComplemento();
                    for (ClsComplemento p : comp) {
                        if (complemento.equals(p.getNome())) {
                            Vcomplemento += p.getPreco();
                        }
                    }
                }
            }
        } else {
            Vcomplemento = 0;
        }

        Vtotal = Vsabor + Vcomplemento + Vtamanho;
        total.setText(Vtotal + "");
        Vcomplemento = 0;

    }//GEN-LAST:event_bttTotalActionPerformed

    private void enableComponents(boolean acai, boolean vit, boolean cpl_obs) {
        // bloqueando componentes 
        cbbSabor.setEnabled(vit);
        cbbComplemento.setEnabled(cpl_obs);
        cbbTamanho.setEnabled(acai);
        btnAdicionar.setEnabled(cpl_obs);
        tblTableCplmt.setEnabled(cpl_obs);
        btnRemover.setEnabled(cpl_obs);
        txtObs.setEnabled(cpl_obs);

        if (acai == true) {
            cbbSabor.setSelectedIndex(0);
            cbbComplemento.setSelectedIndex(0);
        } else if (vit == true) {
            cbbComplemento.setSelectedIndex(0);
            cbbTamanho.setSelectedIndex(0);
        }

        //Deletar lista de complementos
        DefaultTableModel model = (DefaultTableModel) tblTableCplmt.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

    }

    private void resetComponents() {
        cbbProduto.setSelectedIndex(0);
        cbbSabor.setSelectedIndex(0);
        cbbComplemento.setSelectedIndex(0);
        cbbTamanho.setSelectedIndex(0);
        txtObs.setText("");

        DefaultTableModel model = (DefaultTableModel) tblTableCplmt.getModel();
        int row = tblTableCplmt.getSelectedRow();
        if (row != -1) {
            model.removeRow(row);
        }
    }

    private void infoBox(String infoMessage, String titleBar) {
        JOptionPane.showMessageDialog(null, infoMessage, titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

    public void preencherSabor() {
        PerVitamina perVit = new PerVitamina();
        ArrayList<ClsVitamina> vitamina = new PerVitamina().TodasVitaminas();
        for (ClsVitamina p : vitamina) {
            cbbSabor.addItem(p.getTipo() + ": " + p.getNome());
        }
    }

    public void preencherTamanho() {
        PerAcai perAca = new PerAcai();
        ArrayList<ClsAcai> acai = new PerAcai().TodosAcai();
        for (ClsAcai p : acai) {
            cbbTamanho.addItem(p.getTamanho() + "");
        }
    }

    public void preencherComplemento() {
        PerComplemento perCom = new PerComplemento();
        ArrayList<ClsComplemento> complemento = new PerComplemento().TodosComplemento();
        for (ClsComplemento p : complemento) {
            cbbComplemento.addItem(p.getNome() + "");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicinarPedido;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton bttTotal;
    private javax.swing.JComboBox<String> cbbComplemento;
    private javax.swing.JComboBox<String> cbbProduto;
    private javax.swing.JComboBox<String> cbbSabor;
    private javax.swing.JComboBox<String> cbbTamanho;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblObs;
    private javax.swing.JLabel lblPagamento;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblSabor;
    private javax.swing.JLabel lblTamanho;
    private javax.swing.JLabel lblValor;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JPanel pnlComplementos;
    private javax.swing.JScrollPane scrlTableCplmt;
    private javax.swing.JScrollPane scrpnObs;
    private javax.swing.JTable tblTableCplmt;
    private javax.swing.JLabel total;
    private javax.swing.JTextArea txtObs;
    // End of variables declaration//GEN-END:variables

}
